using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.IO;
using KFGCMS.BLL;

public partial class Portals_Content_ContentPreview : System.Web.UI.Page
{
    string tableType;
    bool commentStatus = true;
    DataSet SubpageContainerDataSet = new DataSet ();
    DataRow row;

    public string DataTableType (DataTable dataTable)
    {
        row = dataTable.Rows [0];
        return row["TableType"].ToString ();
    }

    public void HideControl (Control control)
    {
        control.Visible = false;
    }

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            try
            {
                // decode url
                // Init MasterPage
                Portals_MasterPage masterPage = (Portals_MasterPage)Page.Master;

                Global_BLL.DecodeUrl(Request.QueryString["info"]);

                Site_Info.CurrentLanguage = Pages_BLL.GetLanguage();


                // request data from database according to page type and id
                DataSet dataSet = Pages_BLL.ObjectData(QueryString_Info.ID, QueryString_Info.Source, QueryString_Info.Type, QueryString_Info.Language);

                foreach (DataTable dataTable in dataSet.Tables)
                {
                    // get table type
                    tableType = DataTableType(dataTable);

                    // check if table is empty or not
                    if (row[0].ToString().ToLower() == "empty")
                    {
                        continue;
                    }

                    switch (tableType.ToLower())
                    {
                        case "content":
                            {
                                // Init Page Title
                                Pages_BLL.ChangePageTitle(this.Page, dataSet.Tables[0].Rows[0]["Title"].ToString());

                                // bind page content
                                UC_ContentControl.DataContent = dataSet.Tables[0];

                                UC_CommentControl.ObjectID = QueryString_Info.ID;
                                UC_CommentControl.ObjectSource = QueryString_Info.Source;
                                UC_CommentControl.PageTitle = dataSet.Tables[0].Rows[0]["Title"].ToString();

                                if (!Convert.ToBoolean(dataTable.Rows[0]["CommentStatus"])) // temp case when check comments for page and category
                                {
                                    commentStatus = false;
                                    UC_CommentControl.Visible = false;
                                }
                                

                                break;
                            }

                            // Init Comment Container
                        case "comment":
                            {
                                if (commentStatus)
                                    UC_CommentControl.DataContent = dataTable;
                                else
                                    UC_CommentControl.Visible = false;
                                break;
                            }
                    }
                }

                // Init Static Contetn
                masterPage.StaticContent(dataSet);

                UC_CommentControl.LanguageChangeText = "";

            }

            catch (Exception exc)
            {
                Global_BLL.FireException(this, exc.Message);
            }
        }

    }
}
